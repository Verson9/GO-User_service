openapi: 3.0.0

info:
  title: Sample API
  description: Sample Api
  version: 0.1.9

servers:
  - url: /

paths:

  /users:
    get:
      summary: Returns a list of usersdb.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /user:
    post:
      summary: Creates a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created

  /users/{username}:
    get:
      summary: Returns a user by ID.
      parameters:
        - name: username
          in: path
          required: true
          description: Username of user that we want to fetch.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: The specified user ID is invalid (not a number).
        '404':
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error

components:

  schemas:
    DbUser:
      type: object
      properties:
        id:
          type: integer
          example: 4
        username:
          type: string
          example: John Smith
        password:
          type: string
          example: password1
        privileges:
          type: integer
          example: 0
      required:
        - id
        - username
        - password
        - privileges
    User:
      type: object
      properties:
        id:
          type: integer
          example: 4
        username:
          type: string
          example: John Smith
        password:
          type: string
          example: password1
        privileges:
          type: integer
          example: 0
      required:
        - id
        - username
        - password
        - privileges